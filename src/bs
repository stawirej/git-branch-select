#!/bin/bash

set -eou pipefail

# Make menu selections in one column
COLUMNS=12

# List local branches.
IFS=$'\n' read -r -d '' -a BRANCHES < <( git branch && printf '\0' )

# Add exit option.
EXIT=EXIT
BRANCHES+=("$EXIT")

# Find master/main branch entry index
MASTER="  master"
MAIN="  main"
MASTER_SELECTED="* master"
MAIN_SELECTED="* main"
MASTER_INDEX=''
MAIN_INDEX=''
MASTER_SELECTED_INDEX=''
MAIN_SELECTED_INDEX=''

for i in "${!BRANCHES[@]}"; do

    case "${BRANCHES[$i]}" in

        "${MASTER}")
            MASTER_INDEX="${i}"
            break
            ;;

        "${MASTER_SELECTED}")
            MASTER_SELECTED_INDEX="${i}"
            break
            ;;

        "${MAIN}")
            MAIN_INDEX="${i}"
            break
            ;;

        "${MAIN_SELECTED}")
            MAIN_SELECTED_INDEX="${i}"
            break
            ;;
    esac

done

# Make master/main branch first element on the list
# If master and main present select main as prioritized due to an alphabetic order
PRIORITIZED_BRANCHES=()

if [[ -n $MAIN_INDEX || -n $MAIN_SELECTED_INDEX ]]; then

    if [[ -n $MAIN_INDEX ]]; then

        unset BRANCHES["$MAIN_INDEX"]
        PRIORITIZED_BRANCHES+=("$MAIN" "${BRANCHES[@]}")

    elif [[ -n $MAIN_SELECTED_INDEX ]]; then

        unset BRANCHES["$MAIN_SELECTED_INDEX"]
        PRIORITIZED_BRANCHES+=("$MAIN_SELECTED" "${BRANCHES[@]}")

    fi

else

    if [[ -n $MASTER_INDEX ]]; then

        unset BRANCHES["$MASTER_INDEX"]
        PRIORITIZED_BRANCHES+=("$MASTER" "${BRANCHES[@]}")

    elif [[ -n $MASTER_SELECTED_INDEX ]]; then

        unset BRANCHES["$MASTER_SELECTED_INDEX"]
        PRIORITIZED_BRANCHES+=("$MASTER_SELECTED" "${BRANCHES[@]}")

    fi

fi

# Assign branch index provided by user or set default `NONE` value
USER_BRANCH_INDEX=${1-NONE}

# Check if user specified branch number in command line
if [[ "$USER_BRANCH_INDEX" != "NONE" ]]; then

    SELECTED_BRANCH=${PRIORITIZED_BRANCHES[$USER_BRANCH_INDEX - 1]}

else
    # Prompt the user to select one of the available branches.
    select SELECTED_BRANCH in "${PRIORITIZED_BRANCHES[@]}"; do

        if [ "$SELECTED_BRANCH" = "$EXIT" ]; then
            exit
        fi

        [[ -n $SELECTED_BRANCH ]] || { echo "Invalid option!" >&2; continue; }
        break

    done
fi

# Remove selection mark (*).
UNMARKED_BRANCH=${SELECTED_BRANCH//\*/}

# Remove trailing spaces.
BRANCH=$(echo "$UNMARKED_BRANCH" | xargs)

# Checkout selected branch.
git checkout "$BRANCH"
